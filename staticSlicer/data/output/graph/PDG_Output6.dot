strict digraph G {
  0 [ color="red" label="ENTER testFunctionFor" ];
  2 [ label="int sum = 0;" ];
  3 [ color="red" label="int prod = 1;" ];
  4 [ color="red" label="int i = 0" ];
  5 [ color="red" label="i < 10" ];
  6 [ color="red" label="prod > 100 / i" ];
  7 [ label="i = i - 1;" ];
  8 [ color="red" label="break;" ];
  9 [ label="sum = sum + i;" ];
  10 [ label="sum = prod;" ];
  11 [ color="red" label="prod = prod * i;" ];
  12 [ color="red" label="i++" ];
  13 [ label="// System.out.println(i);
System.out.println(sum);" ];
  14 [ label="System.out.println(prod);" ];
  0 -> 2 [ ];
  0 -> 3 [ ];
  0 -> 4 [ ];
  0 -> 5 [ ];
  0 -> 13 [ ];
  0 -> 14 [ ];
  5 -> 6 [ ];
  6 -> 7 [ ];
  6 -> 8 [ ];
  8 -> 9 [ ];
  8 -> 10 [ ];
  8 -> 11 [ ];
  8 -> 12 [ ];
  8 -> 5 [ ];
  6 -> 9 [ ];
  6 -> 10 [ ];
  6 -> 11 [ ];
  6 -> 12 [ ];
  6 -> 5 [ ];
  4 -> 5 [ style="dashed" label="[i]" ];
  12 -> 5 [ style="dashed" label="[i]" ];
  4 -> 6 [ style="dashed" label="[i]" ];
  3 -> 6 [ style="dashed" label="[prod]" ];
  12 -> 6 [ style="dashed" label="[i]" ];
  11 -> 6 [ style="dashed" label="[prod]" ];
  4 -> 7 [ style="dashed" label="[i]" ];
  12 -> 7 [ style="dashed" label="[i]" ];
  4 -> 9 [ style="dashed" label="[i]" ];
  2 -> 9 [ style="dashed" label="[sum]" ];
  12 -> 9 [ style="dashed" label="[i]" ];
  10 -> 9 [ style="dashed" label="[sum]" ];
  3 -> 10 [ style="dashed" label="[prod]" ];
  11 -> 10 [ style="dashed" label="[prod]" ];
  4 -> 11 [ style="dashed" label="[i]" ];
  3 -> 11 [ style="dashed" label="[prod]" ];
  12 -> 11 [ style="dashed" label="[i]" ];
  11 -> 11 [ style="dashed" label="[prod]" ];
  4 -> 12 [ style="dashed" label="[i]" ];
  12 -> 12 [ style="dashed" label="[i]" ];
  2 -> 13 [ style="dashed" label="[sum]" ];
  10 -> 13 [ style="dashed" label="[sum]" ];
  3 -> 14 [ style="dashed" label="[prod]" ];
  11 -> 14 [ style="dashed" label="[prod]" ];
}
